{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 1,
    "pending": 0,
    "failures": 2,
    "start": "2020-10-15T13:18:25.881Z",
    "end": "2020-10-15T13:19:38.917Z",
    "duration": 73036,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "01469f5f-840f-47d6-b3a4-75d057839fc2",
      "title": "",
      "fullFile": "cypress\\integration\\Trualta\\CmRagistration_Spec.js",
      "file": "cypress\\integration\\Trualta\\CmRagistration_Spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5544ff34-8b57-492e-86e0-b868c199edc9",
          "title": "CM Ragistration Full Test Sute",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case1: Adding Blank Data",
              "fullTitle": "CM Ragistration Full Test Sute Test Case1: Adding Blank Data",
              "timedOut": null,
              "duration": 30258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log('************* Adding Ragistration ****************');\nvar userRegistration = new _UserRagistrationPage[\"default\"]();\nuserRegistration.getProfile();\nuserRegistration.getAdmin();\ncy.wait(1500);\nuserRegistration.getUser();\nuserRegistration.getAdd();\nuserRegistration.getEmailAddressError().should('have.text', 'The email field is required.');\nuserRegistration.getFirstNameError().should('have.text', 'The first name field is required.');\nuserRegistration.getRollError().should('have.text', 'Please select Role');",
              "err": {},
              "uuid": "23040bcf-b100-493e-bc4f-05e5462813c7",
              "parentUUID": "5544ff34-8b57-492e-86e0-b868c199edc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case2: Verify existing email ID",
              "fullTitle": "CM Ragistration Full Test Sute Test Case2: Verify existing email ID",
              "timedOut": null,
              "duration": 7609,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.log('************* Adding Ragistration ****************');\nvar userRegistration = new _UserRagistrationPage[\"default\"]();\nuserRegistration.getProfile();\ncy.wait(1000);\nuserRegistration.getAdmin();\ncy.wait(5000);\nuserRegistration.getUser();\ncy.wait(1800);\nuserRegistration.getEmailAddress().type(this.data.Email);\nuserRegistration.getFirstName().type(this.data.Firstname);\nuserRegistration.getLastName().type(this.data.LastName);\nuserRegistration.getMultiSelect();\nuserRegistration.getMultiSelectTag(); // custom commands\ncy.roleSelect(this.data.Role); //userRegistration.getMultiSelect().should('have.value', this.data.Role)\nuserRegistration.getPhone().type(this.data.PhoneNo);\nuserRegistration.getOrganisation().should('have.value', '5');\nuserRegistration.getAdd();\ncy.wait(1000);\nuserRegistration.getNotification().contains('This Email Id is already registered'); //cy.get('#flash_notification')",
              "err": {
                "message": "TypeError: Cannot read property 'Email' of undefined",
                "estack": "TypeError: Cannot read property 'Email' of undefined\n    at Context.eval (http://beta.trualta.com/__cypress/tests?p=cypress\\integration\\Trualta\\CmRagistration_Spec.js:217:55)",
                "diff": null
              },
              "uuid": "80acd5f1-fa43-4446-b410-02cf9ba095b0",
              "parentUUID": "5544ff34-8b57-492e-86e0-b868c199edc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case3: Verify Valid email ID",
              "fullTitle": "CM Ragistration Full Test Sute Test Case3: Verify Valid email ID",
              "timedOut": null,
              "duration": 8113,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.log('************* Adding Ragistration ****************');\nvar userRegistration = new _UserRagistrationPage[\"default\"]();\nuserRegistration.getProfile();\nuserRegistration.getAdmin();\ncy.wait(3500);\nuserRegistration.getUser();\ncy.wait(5000);\nuserRegistration.getEmailAddress().type(this.data.Email2);\nuserRegistration.getFirstName().type(this.data.Firstname);\nuserRegistration.getLastName().type(this.data.LastName);\nuserRegistration.getMultiSelect();\nuserRegistration.getMultiSelectTag(); // custom commands\ncy.roleSelect(this.data.Role); //userRegistration.getMultiSelect().should('have.value', this.data.Role)\nuserRegistration.getPhone().type(this.data.PhoneNo);\nuserRegistration.getOrganisation().should('have.value', '5');\nuserRegistration.getAdd();\ncy.wait(1000); //cy.get('#flash_notification').contains('This Email Id is already registered')\nuserRegistration.getEmailAddressError().should('have.text', 'The email must be a valid email address.');",
              "err": {
                "message": "TypeError: Cannot read property 'Email2' of undefined",
                "estack": "TypeError: Cannot read property 'Email2' of undefined\n    at Context.eval (http://beta.trualta.com/__cypress/tests?p=cypress\\integration\\Trualta\\CmRagistration_Spec.js:239:55)",
                "diff": null
              },
              "uuid": "1955a897-8747-4a4a-865d-e217c7937a8d",
              "parentUUID": "5544ff34-8b57-492e-86e0-b868c199edc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23040bcf-b100-493e-bc4f-05e5462813c7"
          ],
          "failures": [
            "80acd5f1-fa43-4446-b410-02cf9ba095b0",
            "1955a897-8747-4a4a-865d-e217c7937a8d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 45980,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}